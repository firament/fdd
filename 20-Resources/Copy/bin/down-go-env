#! /bin/bash
# 12-Mar-2018 11:24:56 +05:30
################################################################################
#                                                                              #
# /10-Base/bin/down-go-env                                                     #
#                v 0.1                                                         #
#                                                                              #
#    script to release containers mounted for GO environment,                  #
#        to support GO development in ive environment                          #
#        and/or to maintain multiple GO versions side-by-side                  #
#                                                                              #
#    This is necessarily machine dependent, and should be updated              #
#        per instance                                                          #
#                                                                              #
#    TODO: add container for MySql                                             #
#    TODO: add container for MongoDB                                           #
#    TODO: Take paths and file names from config file                          #
#                                                                              #
################################################################################

# TODO:
[[ ${PL_LOADED} -eq 1 ]] && source /10-Base/bin/PlatformVars.sh;

GO_CONTAINERSS="/10-Base/go-tools /10-Base/go-package-lib";
# GO_CONTAINERSS="/10-Base/go-toolsz /10-Base/go-package-lib"; # modified for testing

## Release all containers and free partition for unmount
releaseGoContainers(){
	#
	NBD_CURR="";
	goSudo;

	for CNTR in ${GO_CONTAINERSS}; do
		echo;
		echo "Processing Mount point: ${CNTR}";
		NBD_CURR=$(mount -l | grep "${CNTR}" | cut -d " " -f1 | sort);
		# TODO: Will error if container mounted multiple times
		if [[ ! -z ${NBD_CURR} ]]; then
			echo "Found '${NBD_CURR}', Unmounting now.";
			echo "sudo umount   -v ${NBD_CURR};";
			echo "sudo qemu-nbd -d ${MOUNT_NBD};";
		else
			echo "Not mounted, proceeding forward. ";
		fi;
		echo "#------------------------------------------------------------------------------#";
	done;
}

testFunction(){
	let "LI_INDEX = 0";
	let "LI_ODDEVEN = 0";
	MOUNT_DIR="";
	MOUNT_NBD="";

	echo "USING LIST + ARRAYs";
	CONTAINER_LIST="/dev/sda4 /dev/loop0 /dev/sdb2 /dev/nbd1 /dev/nbd2";
	CONTAINER_LIST="/dev/sda4 /dev/loop0 /dev /dev/sdb2 /dev/nbd1 /dev/nbd2";

	echo "${CONTAINER_LIST}";
	echo;
	for CNTR in ${CONTAINER_LIST}; do

		MOUNTS_OF_INT=($(mount -l | grep ${CNTR} | cut -d " " -f1));
		echo "Container    -> ${CNTR}";
		echo "All elements -> ${MOUNTS_OF_INT[@]}";
		echo "Length       -> ${#MOUNTS_OF_INT[@]}";
		echo "NBD POINT    -> ${MOUNTS_OF_INT[0]}";

		echo "${MOUNTS_OF_INT}";
		if [[ ${#MOUNTS_OF_INT[@]} -gt 1 ]]; then
			echo "${#MOUNTS_OF_INT[@]} elements found, expecting 1 only.";
			echo "Elements are -> ${MOUNTS_OF_INT[@]}";
			echo "#------------------------------------------------------------------------------#";

			continue; # TODO: test with loop
			echo "#------------------------------------------------------------------------------#";
		else
			echo "Exactly one element found";
		fi;
		echo "POST CONTINUE STATEMENTS";
		echo "#------------------------------------------------------------------------------#";
	done;
	}

LOG_LOCN="${HOME}/Documents/init-go-logs";
mkdir -v -p ${LOG_LOCN};

## Do Tasks
	releaseGoContainers  2>&1 | tee ${LOG_LOCN}/releaseGoContainers-$(date +"%Y%m%d-%s").log;
	# testFunction;
